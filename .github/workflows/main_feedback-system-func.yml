name: Build and deploy Feedback System to Azure Function App and Static Web App

on:
  push:
    branches:
      - main  # Trigger workflow on push to the main branch
  workflow_dispatch: # Allow manual triggering of the workflow

env:
  PYTHON_VERSION: '3.10' # Python version for the backend
  FRONTEND_APP_LOCATION: 'frontend' # Path to the frontend (React app)
  FRONTEND_BUILD_OUTPUT: 'frontend/build' # Build output location for React app
  BACKEND_APP_LOCATION: 'backend' # Path to the backend (Azure Functions)

jobs:
  build-frontend:
    name: Build and Deploy Frontend (React App)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Use Node.js version 18 for the React app

      # Step 3: Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: ${{ env.FRONTEND_APP_LOCATION }}
        run: npm install

      # Step 4: Build the React app
      - name: Build React App
        working-directory: ${{ env.FRONTEND_APP_LOCATION }}
        run: |
          # Prevent warnings from being treated as errors
          export CI=false
          npm run build

      # Step 5: Deploy the frontend to Azure Static Web App
      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          app_location: ${{ env.FRONTEND_APP_LOCATION }} # Path to the React app
          output_location: ${{ env.FRONTEND_BUILD_OUTPUT }} # Path to the production build
          api_location: ${{ env.BACKEND_APP_LOCATION }} # Path to the backend (Azure Functions)
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APP_TOKEN }} # Deployment token for Static Web App

  build-backend:
    name: Build and Deploy Backend (Azure Functions)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }} # Use Python version 3.10

      # Step 3: Create and activate a virtual environment
      - name: Create and Activate Virtual Environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # Step 4: Install backend dependencies
      - name: Install Backend Dependencies
        working-directory: ${{ env.BACKEND_APP_LOCATION }}
        run: pip install -r requirements.txt

      # Optional: Step 5 - Run tests
      # Uncomment the following lines if you have tests for the backend
      # - name: Run Backend Tests
      #   working-directory: ${{ env.BACKEND_APP_LOCATION }}
      #   run: pytest

      # Step 6: Zip the backend directory for deployment
      - name: Zip Backend Artifact
        working-directory: ${{ env.BACKEND_APP_LOCATION }}
        run: zip -r ../release.zip ./*

      # Step 7: Upload backend artifact for deployment
      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-release
          path: release.zip

  deploy-backend:
    name: Deploy Backend to Azure Function App
    runs-on: ubuntu-latest
    needs: build-backend # Ensure this job waits for the build-backend job to complete

    steps:
      # Step 1: Download backend artifact from the build job
      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-release

      # Step 2: Unzip the backend artifact for deployment
      - name: Unzip Backend Artifact
        run: unzip release.zip

      # Step 3: Deploy the backend to Azure Function App
      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'feedback-system-func' # Name of your Azure Function App
          slot-name: 'Production' # Deployment slot (default: Production)
          package: './' # Path to the unzipped artifact
          publish-profile: ${{ secrets.AZURE_FUNCTION_APP_PUBLISH_PROFILE }} # Publish profile for Azure Function App
          sku: 'flexconsumption' # Pricing plan for the Function App
