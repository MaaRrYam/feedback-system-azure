name: Build and deploy Feedback System to Azure Function App and Static Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.10' # Python version for the backend
  FRONTEND_APP_LOCATION: 'frontend' # Path to the frontend (React app)
  FRONTEND_BUILD_OUTPUT: 'frontend/build' # Build output location for React app
  BACKEND_APP_LOCATION: 'backend' # Path to the backend (Azure Functions)

jobs:
  build-frontend:
    name: Build Frontend (React)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Specify the Node.js version

      # Step 3: Install frontend dependencies
      - name: Install Dependencies
        working-directory: ${{ env.FRONTEND_APP_LOCATION }}
        run: npm install

      # Step 4: Build the React app
      - name: Build React App
        working-directory: ${{ env.FRONTEND_APP_LOCATION }}
        run: npm run build

      # Step 5: Deploy the frontend to Azure Static Web App
      - name: Deploy to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          app_location: ${{ env.FRONTEND_APP_LOCATION }}
          output_location: ${{ env.FRONTEND_BUILD_OUTPUT }}
          api_location: ${{ env.BACKEND_APP_LOCATION }} # Backend API directory
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APP_TOKEN }}

  build-backend:
    name: Build Backend (Azure Functions)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Step 3: Create and activate virtual environment
      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # Step 4: Install backend dependencies
      - name: Install Dependencies
        working-directory: ${{ env.BACKEND_APP_LOCATION }}
        run: pip install -r requirements.txt

      # Optional: Step 5 - Run Tests
      # Uncomment and customize the following block to add testing
      # - name: Run Backend Tests
      #   working-directory: ${{ env.BACKEND_APP_LOCATION }}
      #   run: pytest

      # Step 6: Zip the backend for deployment
      - name: Zip Backend Artifact
        working-directory: ${{ env.BACKEND_APP_LOCATION }}
        run: zip -r release.zip ./*

      # Step 7: Upload artifact for deployment
      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            ${{ env.BACKEND_APP_LOCATION }}/release.zip
            !venv/

  deploy-backend:
    name: Deploy Backend to Azure Function App
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      # Step 1: Download backend artifact from the build job
      - name: Download Backend Artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # Step 2: Unzip the backend artifact
      - name: Unzip Backend Artifact
        run: unzip backend/release.zip

      # Step 3: Deploy the backend to Azure Function App
      - name: Deploy to Azure Function App
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'feedback-system-func'
          slot-name: 'Production'
          package: ${{ env.BACKEND_APP_LOCATION }}
          publish-profile: ${{ secrets.AZURE_FUNCTION_APP_PUBLISH_PROFILE }}
          sku: 'flexconsumption'
